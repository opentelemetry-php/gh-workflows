
name: PHP Composer

on:
  workflow_call:
      inputs:
        matrix_php_version:
          default: '["7.4", "8.0", "8.1"]'
          required: false
          type: string
        matrix_os:
          default: '[ubuntu-latest]'
          required: false
          type: string
        matrix_extension:
          default: '["ast"]'
          required: false
          type: string
        matrix_experimental:
          default: '[false]'
          required: false
          type: string

jobs:
  build:

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php-version: ${{ fromJSON(inputs.matrix_php_version) }}
        os: ${{ fromJSON(inputs.matrix_os) }}
        extensions: ${{ fromJSON(inputs.matrix_extension) }}
        experimental: ${{ fromJSON(inputs.matrix_experimental) }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        coverage: xdebug
        tools: php-cs-fixer
        extensions: ${{ matrix.extensions }}

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Update Composer
      run: composer update

    - name: Check Style
      run: vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php --dry-run --stop-on-violation --using-cache=no -vvv

    - name: Check Dependencies
      run: vendor/bin/deptrac --formatter=github-actions

    - name: Run Phan
      env:
        PHAN_DISABLE_XDEBUG_WARN: 1
      run: vendor/bin/phan

    - name: Run Psalm
      run: vendor/bin/psalm --output-format=github

    - name: Run Phpstan
      run: vendor/bin/phpstan analyse --error-format=github

    - name: Run PHPUnit (unit tests)
      run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover --testsuite unit

    - name: Run PHPUnit (integration tests)
      run: vendor/bin/phpunit --testsuite integration

    - name: Code Coverage
      run: bash <(curl -s https://codecov.io/bash) -F ${{ matrix.php-version }}
